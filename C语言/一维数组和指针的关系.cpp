//一维数组和指针的关系，数组和循环结构，指针
//数组名a等价于起始地址，可以和数组对应的指针变量等价替换；起始地址是a[0]的地址 
#include<stdio.h>
main()
{
int a[4]={1,2,3,4}; int *p;
p=a;//由于数组名a就是它的起始地址，所以p和a完全等价，可以互相替换
   //but：p是指针变量，a是地址常量，常量不能做++运算，变量可做++运算 
printf("a的值%d\n\n",p);//数组名就是起始地址

printf("a[1]的地址%d\n\n",&p[1]);//p和a可等价替换 
printf("a[1]的地址%d\n\n",&a[1]);//p和a可等价替换

printf("a[0]的值是%d\n\n",a[0]);//通过数组名输出a[0]的值
printf("a[0]的值是%d\n\n",*p);//通过指针输出a[0]的值

printf("p的值是%d\n\n",p);//p是a[0]的地址
printf("p+1的值是%d\n\n",p+1);//p+1是a[1]的地址，以数组元素为单位移动 
printf("p+2的值是%d\n\n",p+2);//p+2是a[2]的地址，以数组元素为单位移动
printf("p+1的值是%d\n\n",a+1);//p和a完全等价

printf("a[1]的值是%d",*(p+1));//通过指针输出a[1]的值
printf("a[1]的值是%d",*(a+1));//p和a完全等价 
}
